{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _react2 = require(\"@chakra-ui/react\");\n\nvar _formik = require(\"formik\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar TextView = function TextView(_ref) {\n  var props = _extends({}, _ref);\n\n  var _useField = (0, _formik.useField)(_objectSpread({}, props)),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  var label = props.label,\n      hidden = props.hidden,\n      placeholder = props.placeholder,\n      icon = props.icon;\n  return /*#__PURE__*/_react.default.createElement(_react2.FormControl, {\n    isInvalid: !!error\n  }, /*#__PURE__*/_react.default.createElement(_react2.HStack, null, icon, /*#__PURE__*/_react.default.createElement(_react2.FormLabel, {\n    htmlFor: field.name,\n    hidden: hidden,\n    marginBottom: 'auto'\n  }, label)), /*#__PURE__*/_react.default.createElement(_react2.Textarea, _extends({}, field, {\n    id: field.name,\n    placeholder: placeholder\n  })), error ? /*#__PURE__*/_react.default.createElement(_react2.FormErrorMessage, null, error) : null);\n};\n\nvar _default = TextView;\nexports.default = _default;","map":{"version":3,"sources":["../../../../../src/lib/components/weekPlanner/timeTable/TextView.tsx"],"names":["TextView","props","field","error","label","hidden","placeholder","icon"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAOA,IAAA,OAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAMA,QAAiC,GAAG,SAApCA,QAAoC,CAAA,IAAA,EAAkB;AAAA,MAAZC,KAAY,GAAA,QAAA,CAAA,EAAA,EAAA,IAAA,CAAA;;AAC1D,MAAA,SAAA,GAA2B,CAAA,GAAA,OAAA,CAAA,QAAA,EAAA,aAAA,CAAA,EAAA,EAA3B,KAA2B,CAAA,CAA3B;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAAOC,KAAP,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAAgBC,KAAhB,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA,KAAA;;AACA,MAAQC,KAAR,GAA6CH,KAA7C,CAAA,KAAA;AAAA,MAAeI,MAAf,GAA6CJ,KAA7C,CAAA,MAAA;AAAA,MAAuBK,WAAvB,GAA6CL,KAA7C,CAAA,WAAA;AAAA,MAAoCM,IAApC,GAA6CN,KAA7C,CAAA,IAAA;AACA,SAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,WAAA,EAAA;AAAa,IAAA,SAAS,EAAE,CAAC,CAACE;AAA1B,GAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,aAEE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,SAAA,EAAA;AAAW,IAAA,OAAO,EAAED,KAAK,CAAzB,IAAA;AAAgC,IAAA,MAAM,EAAtC,MAAA;AAAgD,IAAA,YAAY,EAAE;AAA9D,GAAA,EAHJ,KAGI,CAFF,CADF,EAAA,aAOE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAqB,IAAA,EAAE,EAAEA,KAAK,CAA9B,IAAA;AAAqC,IAAA,WAAW,EAAEI;AAAlD,GAAA,CAAA,CAPF,EAQGH,KAAK,GAAA,aAAG,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,gBAAA,EAAA,IAAA,EAAH,KAAG,CAAH,GATV,IACE,CADF;AAHF,CAAA;;eAiBeH,Q","sourcesContent":["import React, { InputHTMLAttributes } from 'react'\nimport {\n  FormControl,\n  FormLabel,\n  Textarea,\n  FormErrorMessage,\n  HStack,\n} from '@chakra-ui/react'\nimport { useField } from 'formik'\nimport { ReactNode } from 'react'\n\ntype TextViewProps = InputHTMLAttributes<HTMLInputElement> & {\n  label: string\n  name: string\n  placeholder: string\n  icon?: ReactNode\n}\n\nconst TextView: React.FC<TextViewProps> = ({ ...props }) => {\n  const [field, { error }] = useField({ ...props })\n  const { label, hidden, placeholder, icon } = props\n  return (\n    <FormControl isInvalid={!!error}>\n      <HStack>\n        {icon}\n        <FormLabel htmlFor={field.name} hidden={hidden} marginBottom={'auto'}>\n          {label}\n        </FormLabel>\n      </HStack>\n      <Textarea {...field} id={field.name} placeholder={placeholder} />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  )\n}\n\nexport default TextView\n"]},"metadata":{},"sourceType":"script"}