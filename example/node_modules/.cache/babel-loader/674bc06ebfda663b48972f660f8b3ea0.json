{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/franckmamboue/Developer/react-week-planner/example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _react2 = require(\"@chakra-ui/react\");\n\nvar _dateFns = require(\"date-fns\");\n\nvar _formik = require(\"formik\");\n\nvar Yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _DatePicker = _interopRequireDefault(require(\"./DatePicker\"));\n\nvar _timeHelper = require(\"../utils/timeHelper\");\n\nvar _TextView = _interopRequireDefault(require(\"./TextView\"));\n\nvar _TimeField = _interopRequireDefault(require(\"./TimeField\"));\n\nvar _isSameDay = _interopRequireDefault(require(\"date-fns/isSameDay\"));\n\nvar _RadioButtons = _interopRequireDefault(require(\"./RadioButtons\"));\n\nvar _InputField = _interopRequireDefault(require(\"./InputField\"));\n\nvar _WeekPlannerConfig = require(\"../utils/WeekPlannerConfig\");\n\nvar _bi = require(\"react-icons/bi\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar EventModal = function EventModal(_ref) {\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      event = _ref.event,\n      onSave = _ref.onSave,\n      onDelete = _ref.onDelete,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? _WeekPlannerConfig.defaultConfig : _ref$config;\n\n  var _useState = (0, _react.useState)(event.start),\n      _useState2 = _slicedToArray(_useState, 2),\n      start = _useState2[0],\n      setStart = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(event.end),\n      _useState4 = _slicedToArray(_useState3, 2),\n      end = _useState4[0],\n      setEnd = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      endConfirmed = _useState6[0],\n      setEndConfirmed = _useState6[1];\n\n  var timeFormats = config.timeFormats,\n      spacing = config.spacing,\n      onSaveEvent = config.onSaveEvent,\n      eventTypes = config.eventTypes,\n      toastDurationMilli = config.toastDurationMilli,\n      onDeleteEvent = config.onDeleteEvent;\n  var toast = (0, _react2.useToast)();\n  var strings = _WeekPlannerConfig.weekPlannerStrings;\n  var timeTypeError = strings.invalidTime;\n  var EventSchema = Yup.object().shape({\n    title: Yup.string().required(strings.titleRequired),\n    startTime: Yup.date().required(strings.startTimeRequired).transform(function (_, originalValue) {\n      return (0, _timeHelper.parseTime)(_, originalValue, timeFormats);\n    }).typeError(timeTypeError),\n    endTime: Yup.date().required(strings.endTimeRequired).transform(function (_, originalValue) {\n      return (0, _timeHelper.parseTime)(_, originalValue, timeFormats);\n    }).typeError(timeTypeError),\n    notes: Yup.string().nullable()\n  });\n\n  var parseUpdateResults = function parseUpdateResults(result, isDelete) {\n    var _deleteResult$event;\n\n    var errors = result.errors;\n    var saveResult = result;\n    var deleteResult = result;\n\n    var toastSuccess = function toastSuccess() {\n      toast({\n        title: isDelete ? strings.eventDeleted : strings.eventSaved,\n        status: 'success',\n        duration: toastDurationMilli,\n        isClosable: true,\n        position: 'top'\n      });\n    };\n\n    if (errors && errors.length !== 0) {\n      errors.map(function (error) {\n        return toast({\n          title: error,\n          status: 'error',\n          duration: toastDurationMilli,\n          isClosable: true,\n          position: 'top'\n        });\n      });\n    } else if (saveResult.event && !isDelete) {\n      toastSuccess();\n      onSave(saveResult.event);\n    } else if ((_deleteResult$event = deleteResult.event) !== null && _deleteResult$event !== void 0 && _deleteResult$event.id && isDelete) {\n      toastSuccess();\n      onDelete(deleteResult.event.id);\n    } else {\n      toast({\n        title: strings.unexpectedError,\n        status: 'error',\n        duration: toastDurationMilli,\n        isClosable: true,\n        position: 'top'\n      });\n      console.error('Invalid state. Check server logs.');\n    }\n  };\n\n  (0, _react.useEffect)(function () {\n    if (isOpen) return;\n    setStart(event.start);\n    setEnd(event.end);\n  }, [event.end, event.start, isOpen]);\n  var formattedEnd = (0, _dateFns.format)(end, 'dd-MM-yyyy');\n  var isNewEvent = !event.id;\n  var header = isNewEvent ? strings.addEvent : strings.updateEvent;\n  return /*#__PURE__*/_react[\"default\"].createElement(_react2.Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    isCentered: true,\n    motionPreset: \"slideInBottom\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_react2.ModalOverlay, null), /*#__PURE__*/_react[\"default\"].createElement(_react2.ModalContent, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.ModalHeader, null, header), /*#__PURE__*/_react[\"default\"].createElement(_react2.ModalCloseButton, null), /*#__PURE__*/_react[\"default\"].createElement(_formik.Formik, {\n    initialValues: {\n      title: event.title,\n      startTime: (0, _dateFns.format)(event.start, timeFormats[0]),\n      endTime: (0, _dateFns.format)(event.end, timeFormats[0]),\n      notes: event.notes,\n      saveButton: undefined,\n      deleteButton: undefined,\n      type: event.type\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        var title, notes, saveButton, deleteButton, type, eventToSave, saveResult, _saveResult;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // TODO: loading indicator\n                title = values.title, notes = values.notes, saveButton = values.saveButton, deleteButton = values.deleteButton, type = values.type;\n\n                if (!saveButton) {\n                  _context.next = 7;\n                  break;\n                }\n\n                eventToSave = {\n                  id: event.id,\n                  title: title,\n                  start: start,\n                  end: end,\n                  notes: notes,\n                  type: type\n                };\n                _context.next = 5;\n                return onSaveEvent(eventToSave);\n\n              case 5:\n                saveResult = _context.sent;\n                parseUpdateResults(saveResult, false);\n\n              case 7:\n                if (!deleteButton) {\n                  _context.next = 14;\n                  break;\n                }\n\n                if (event.id) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 10:\n                _context.next = 12;\n                return onDeleteEvent(event.id);\n\n              case 12:\n                _saveResult = _context.sent;\n                parseUpdateResults(_saveResult, true);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    validationSchema: EventSchema,\n    validateOnChange: false,\n    validateOnBlur: false\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting,\n        setFieldTouched = _ref3.setFieldTouched,\n        setFieldValue = _ref3.setFieldValue,\n        handleSubmit = _ref3.handleSubmit;\n    return /*#__PURE__*/_react[\"default\"].createElement(_formik.Form, {\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/_react[\"default\"].createElement(_react2.ModalBody, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.Stack, {\n      spacing: spacing\n    }, eventTypes.length > 1 ? /*#__PURE__*/_react[\"default\"].createElement(_RadioButtons[\"default\"], {\n      name: 'type',\n      options: eventTypes\n    }) : null, /*#__PURE__*/_react[\"default\"].createElement(_InputField[\"default\"], {\n      label: strings.title,\n      name: 'title',\n      placeholder: strings.eventTitlePlaceholder\n    }), /*#__PURE__*/_react[\"default\"].createElement(_react2.HStack, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.Stack, {\n      flex: 1\n    }, /*#__PURE__*/_react[\"default\"].createElement(_TimeField[\"default\"], {\n      label: strings.from,\n      name: 'startTime',\n      date: start,\n      onDate: function onDate(time) {\n        setStart(time);\n        setFieldTouched('startTime', true);\n      },\n      timeFormats: timeFormats\n    }), /*#__PURE__*/_react[\"default\"].createElement(_react2.Checkbox, {\n      visibility: \"hidden\"\n    }, /*#__PURE__*/_react[\"default\"].createElement(_react2.Text, null, formattedEnd))), /*#__PURE__*/_react[\"default\"].createElement(_react2.Stack, {\n      flex: 1\n    }, /*#__PURE__*/_react[\"default\"].createElement(_TimeField[\"default\"], {\n      label: strings.to,\n      name: 'endTime',\n      date: end,\n      onDate: function onDate(time) {\n        setEnd(time);\n        setFieldTouched('endTime', true);\n      },\n      timeFormats: timeFormats\n    }), /*#__PURE__*/_react[\"default\"].createElement(_react2.Checkbox, {\n      defaultIsChecked: endConfirmed,\n      isChecked: endConfirmed,\n      onChange: function onChange(event) {\n        setEndConfirmed(event.target.checked);\n      }\n    }, /*#__PURE__*/_react[\"default\"].createElement(_react2.Text, null, \"\".concat(strings.ends, \" \").concat((0, _isSameDay[\"default\"])(start, end) ? \"\".concat(strings.sameDay) : formattedEnd))))), /*#__PURE__*/_react[\"default\"].createElement(_react2.Box, {\n      hidden: endConfirmed\n    }, /*#__PURE__*/_react[\"default\"].createElement(_DatePicker[\"default\"], {\n      date: end,\n      onDate: function onDate(newEndDate) {\n        setEnd(newEndDate);\n        setEndConfirmed(true);\n      },\n      config: config\n    })), /*#__PURE__*/_react[\"default\"].createElement(_TextView[\"default\"], {\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_bi.BiPencil, null),\n      label: strings.notes,\n      name: 'notes',\n      placeholder: strings.eventNotesPlaceholder\n    }))), /*#__PURE__*/_react[\"default\"].createElement(_react2.ModalFooter, null, isNewEvent ? null : /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.Button, {\n      colorScheme: \"red\",\n      type: \"button\",\n      isLoading: isSubmitting,\n      onClick: function onClick() {\n        setFieldValue('deleteButton', 1, false);\n        handleSubmit();\n      }\n    }, strings[\"delete\"]), /*#__PURE__*/_react[\"default\"].createElement(_react2.Spacer, null)), /*#__PURE__*/_react[\"default\"].createElement(_react2.Button, {\n      type: \"button\",\n      isLoading: isSubmitting,\n      onClick: function onClick() {\n        setFieldValue('saveButton', 1, false);\n        handleSubmit();\n      }\n    }, strings.save)));\n  })));\n};\n\nvar _default = EventModal;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../../src/lib/components/weekPlanner/timeTable/EventModal.tsx"],"names":["EventModal","isOpen","onClose","event","onSave","onDelete","config","defaultConfig","start","setStart","end","setEnd","endConfirmed","setEndConfirmed","timeFormats","spacing","onSaveEvent","eventTypes","toastDurationMilli","onDeleteEvent","toast","strings","weekPlannerStrings","timeTypeError","EventSchema","title","Yup","startTime","endTime","notes","parseUpdateResults","errors","result","saveResult","deleteResult","toastSuccess","isDelete","status","duration","isClosable","position","console","formattedEnd","isNewEvent","header","saveButton","deleteButton","type","values","eventToSave","id","isSubmitting","setFieldTouched","setFieldValue","handleSubmit","eventTitlePlaceholder","eventNotesPlaceholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Button,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Stack,\n  Checkbox,\n  Text,\n  Box,\n  Spacer,\n  useToast,\n} from '@chakra-ui/react'\nimport { format } from 'date-fns'\nimport { Form, Formik } from 'formik'\nimport * as Yup from 'yup'\nimport WeekEvent from '../WeekEvent'\nimport DatePicker from './DatePicker'\nimport { parseTime } from '../utils/timeHelper'\nimport TextView from './TextView'\nimport TimeField from './TimeField'\nimport isSameDay from 'date-fns/isSameDay'\nimport RadioButtons from './RadioButtons'\nimport InputField from './InputField'\nimport {\n  defaultConfig,\n  DeleteResult,\n  SaveResult,\n  WeekEventInput,\n  WeekPlannerConfig,\n  weekPlannerStrings,\n} from '../utils/WeekPlannerConfig'\nimport { BiPencil } from 'react-icons/bi'\n\ninterface EventModalProps {\n  isOpen: boolean\n  onClose: () => void\n  event: WeekEventInput\n  onSave: (event: WeekEvent) => void\n  onDelete: (event: WeekEvent['id']) => void\n  config?: WeekPlannerConfig\n}\n\nconst EventModal = ({\n  isOpen,\n  onClose,\n  event,\n  onSave,\n  onDelete,\n  config = defaultConfig,\n}: EventModalProps) => {\n  const [start, setStart] = useState(event.start)\n  const [end, setEnd] = useState(event.end)\n  const [endConfirmed, setEndConfirmed] = useState(true)\n  const {\n    timeFormats,\n    spacing,\n    onSaveEvent,\n    eventTypes,\n    toastDurationMilli,\n    onDeleteEvent,\n  } = config\n  const toast = useToast()\n  const strings = weekPlannerStrings\n\n  const timeTypeError = strings.invalidTime\n  const EventSchema = Yup.object().shape({\n    title: Yup.string().required(strings.titleRequired),\n    startTime: Yup.date()\n      .required(strings.startTimeRequired)\n      .transform((_, originalValue) => {\n        return parseTime(_, originalValue, timeFormats)\n      })\n      .typeError(timeTypeError),\n    endTime: Yup.date()\n      .required(strings.endTimeRequired)\n      .transform((_, originalValue) => {\n        return parseTime(_, originalValue, timeFormats)\n      })\n      .typeError(timeTypeError),\n    notes: Yup.string().nullable(),\n  })\n\n  const parseUpdateResults = (\n    result: SaveResult | DeleteResult,\n    isDelete: boolean\n  ) => {\n    const { errors } = result\n    const saveResult = result as SaveResult\n    const deleteResult = result as DeleteResult\n    const toastSuccess = () => {\n      toast({\n        title: isDelete ? strings.eventDeleted : strings.eventSaved,\n        status: 'success',\n        duration: toastDurationMilli,\n        isClosable: true,\n        position: 'top',\n      })\n    }\n    if (errors && errors.length !== 0) {\n      errors.map((error) =>\n        toast({\n          title: error,\n          status: 'error',\n          duration: toastDurationMilli,\n          isClosable: true,\n          position: 'top',\n        })\n      )\n    } else if (saveResult.event && !isDelete) {\n      toastSuccess()\n      onSave(saveResult.event)\n    } else if (deleteResult.event?.id && isDelete) {\n      toastSuccess()\n      onDelete(deleteResult.event.id)\n    } else {\n      toast({\n        title: strings.unexpectedError,\n        status: 'error',\n        duration: toastDurationMilli,\n        isClosable: true,\n        position: 'top',\n      })\n      console.error('Invalid state. Check server logs.')\n    }\n  }\n\n  useEffect(() => {\n    if (isOpen) return\n    setStart(event.start)\n    setEnd(event.end)\n  }, [event.end, event.start, isOpen])\n\n  const formattedEnd = format(end, 'dd-MM-yyyy')\n\n  const isNewEvent = !event.id\n\n  const header = isNewEvent ? strings.addEvent : strings.updateEvent\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      isCentered\n      motionPreset=\"slideInBottom\"\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>{header}</ModalHeader>\n        <ModalCloseButton />\n        <Formik\n          initialValues={{\n            title: event.title,\n            startTime: format(event.start, timeFormats[0]),\n            endTime: format(event.end, timeFormats[0]),\n            notes: event.notes,\n            saveButton: undefined,\n            deleteButton: undefined,\n            type: event.type,\n          }}\n          onSubmit={async (values) => {\n            // TODO: loading indicator\n            const { title, notes, saveButton, deleteButton, type } = values\n            if (saveButton) {\n              const eventToSave = {\n                id: event.id,\n                title,\n                start,\n                end,\n                notes,\n                type,\n              }\n              const saveResult = await onSaveEvent(eventToSave)\n              parseUpdateResults(saveResult, false)\n            }\n            if (deleteButton) {\n              if (!event.id) return\n              const saveResult = await onDeleteEvent(event.id)\n              parseUpdateResults(saveResult, true)\n            }\n          }}\n          validationSchema={EventSchema}\n          validateOnChange={false}\n          validateOnBlur={false}\n        >\n          {({ isSubmitting, setFieldTouched, setFieldValue, handleSubmit }) => (\n            <Form onSubmit={handleSubmit}>\n              <ModalBody>\n                <Stack spacing={spacing}>\n                  {eventTypes.length > 1 ? (\n                    <RadioButtons name={'type'} options={eventTypes} />\n                  ) : null}\n\n                  <InputField\n                    label={strings.title}\n                    name={'title'}\n                    placeholder={strings.eventTitlePlaceholder}\n                  />\n\n                  <HStack>\n                    <Stack flex={1}>\n                      <TimeField\n                        label={strings.from}\n                        name={'startTime'}\n                        date={start}\n                        onDate={(time: Date) => {\n                          setStart(time)\n                          setFieldTouched('startTime', true)\n                        }}\n                        timeFormats={timeFormats}\n                      />\n                      <Checkbox visibility=\"hidden\">\n                        <Text>{formattedEnd}</Text>\n                      </Checkbox>\n                    </Stack>\n                    <Stack flex={1}>\n                      <TimeField\n                        label={strings.to}\n                        name={'endTime'}\n                        date={end}\n                        onDate={(time: Date) => {\n                          setEnd(time)\n                          setFieldTouched('endTime', true)\n                        }}\n                        timeFormats={timeFormats}\n                      />\n                      <Checkbox\n                        defaultIsChecked={endConfirmed}\n                        isChecked={endConfirmed}\n                        onChange={(event) => {\n                          setEndConfirmed(event.target.checked)\n                        }}\n                      >\n                        <Text>\n                          {`${strings.ends} ${\n                            isSameDay(start, end)\n                              ? `${strings.sameDay}`\n                              : formattedEnd\n                          }`}\n                        </Text>\n                      </Checkbox>\n                    </Stack>\n                  </HStack>\n\n                  <Box hidden={endConfirmed}>\n                    <DatePicker\n                      date={end}\n                      onDate={(newEndDate: Date) => {\n                        setEnd(newEndDate)\n                        setEndConfirmed(true)\n                      }}\n                      config={config}\n                    />\n                  </Box>\n\n                  <TextView\n                    icon={<BiPencil />}\n                    label={strings.notes}\n                    name={'notes'}\n                    placeholder={strings.eventNotesPlaceholder}\n                  />\n                </Stack>\n              </ModalBody>\n              <ModalFooter>\n                {isNewEvent ? null : (\n                  <>\n                    <Button\n                      colorScheme=\"red\"\n                      type=\"button\"\n                      isLoading={isSubmitting}\n                      onClick={() => {\n                        setFieldValue('deleteButton', 1, false)\n                        handleSubmit()\n                      }}\n                    >\n                      {strings.delete}\n                    </Button>\n                    <Spacer />\n                  </>\n                )}\n                <Button\n                  type=\"button\"\n                  isLoading={isSubmitting}\n                  onClick={() => {\n                    setFieldValue('saveButton', 1, false)\n                    handleSubmit()\n                  }}\n                >\n                  {strings.save}\n                </Button>\n              </ModalFooter>\n            </Form>\n          )}\n        </Formik>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default EventModal\n"]},"metadata":{},"sourceType":"script"}