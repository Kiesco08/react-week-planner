{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultConfig = exports.weekPlannerStrings = void 0;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar weekPlannerStrings = {\n  invalidTime: 'Invalid time',\n  titleRequired: 'Title required',\n  startTimeRequired: 'Start time required',\n  endTimeRequired: 'End time required',\n  addEvent: 'Add event',\n  updateEvent: 'Update event',\n  title: 'Title',\n  eventTitlePlaceholder: 'eg Morning run',\n  from: 'From',\n  to: 'To',\n  ends: 'Ends',\n  sameDay: 'same day',\n  notes: 'Notes',\n  eventNotesPlaceholder: 'eg Target: 7km',\n  busy: 'Busy',\n  training: 'Training',\n  game: 'Game',\n  save: 'Save',\n  delete: 'Delete',\n  eventSaved: 'Event saved',\n  eventDeleted: 'Event deleted',\n  unexpectedError: 'Unexpected error'\n};\nexports.weekPlannerStrings = weekPlannerStrings;\nvar defaultConfig = {\n  isLoading: false,\n  isSkeleton: false,\n  minuteIndicator: false,\n  timeslotHeight: 60,\n  calendarGripGap: 2,\n  padding: 4,\n  spacing: 4,\n  background: 'gray.100',\n  timeFormats: ['h:mm', 'h:m', 'h', 'hh', 'hh:m', 'hh:mm'],\n  minWidth: 'container.lg',\n  onSaveEvent: function onSaveEvent(event) {\n    console.error(\"Implement the onSaveEvent function in WeekPlannerConfig.ts to save \".concat(event.title));\n    return new Promise(function (resolve) {\n      return resolve({\n        event: _objectSpread(_objectSpread({}, event), {}, {\n          id: event.id ? event.id : Math.random() * 1000 * 1000\n        })\n      });\n    });\n  },\n  onDeleteEvent: function onDeleteEvent(eventId) {\n    console.error(\"Implement the onDeleteEvent function in WeekPlannerConfig.ts to delete events\");\n    return new Promise(function (resolve) {\n      return resolve({\n        event: {\n          id: eventId\n        }\n      });\n    });\n  },\n  eventTypes: [{\n    value: 'todo',\n    label: 'Todo',\n    colorScheme: 'orange',\n    isDefault: true\n  }, {\n    value: 'work',\n    label: 'Work',\n    colorScheme: 'purple'\n  }, {\n    value: 'other',\n    label: 'Other',\n    colorScheme: 'gray'\n  }],\n  toastDurationMilli: 3000\n};\nexports.defaultConfig = defaultConfig;","map":{"version":3,"sources":["../../../../../src/lib/components/weekPlanner/utils/WeekPlannerConfig.ts"],"names":["weekPlannerStrings","invalidTime","titleRequired","startTimeRequired","endTimeRequired","addEvent","updateEvent","title","eventTitlePlaceholder","from","to","ends","sameDay","notes","eventNotesPlaceholder","busy","training","game","save","delete","eventSaved","eventDeleted","unexpectedError","defaultConfig","isLoading","isSkeleton","minuteIndicator","timeslotHeight","calendarGripGap","padding","spacing","background","timeFormats","minWidth","onSaveEvent","console","event","resolve","id","Math","onDeleteEvent","eventId","eventTypes","value","label","colorScheme","isDefault","toastDurationMilli"],"mappings":"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","sourcesContent":["import { BackgroundProps, LayoutProps } from '@chakra-ui/react'\nimport WeekEvent from '../WeekEvent'\nimport { Theme } from '@chakra-ui/react'\n\nexport interface EventTypeConfig {\n  value: string\n  label: string\n  colorScheme: keyof Theme['colors']\n  isDefault?: boolean\n}\nexport interface SaveResult {\n  event?: WeekEvent\n  errors?: string[]\n}\nexport interface DeleteResult {\n  event?: { id: WeekEvent['id'] }\n  errors?: string[]\n}\n\nexport interface WeekEventInput extends Omit<WeekEvent, 'id'> {\n  id?: number\n}\n\nexport interface WeekPlannerConfig {\n  timeslotHeight: number\n  calendarGripGap: number\n  padding: number\n  spacing: number\n  background: BackgroundProps['background']\n  timeFormats: string[]\n  minWidth: LayoutProps['minWidth']\n  eventTypes: EventTypeConfig[]\n  onSaveEvent: (event: WeekEventInput) => Promise<SaveResult>\n  onDeleteEvent: (id: WeekEvent['id']) => Promise<DeleteResult>\n  toastDurationMilli: number\n  minuteIndicator: boolean\n  isSkeleton: boolean\n  isLoading: boolean\n}\n\nexport const weekPlannerStrings = {\n  invalidTime: 'Invalid time',\n  titleRequired: 'Title required',\n  startTimeRequired: 'Start time required',\n  endTimeRequired: 'End time required',\n  addEvent: 'Add event',\n  updateEvent: 'Update event',\n  title: 'Title',\n  eventTitlePlaceholder: 'eg Morning run',\n  from: 'From',\n  to: 'To',\n  ends: 'Ends',\n  sameDay: 'same day',\n  notes: 'Notes',\n  eventNotesPlaceholder: 'eg Target: 7km',\n  busy: 'Busy',\n  training: 'Training',\n  game: 'Game',\n  save: 'Save',\n  delete: 'Delete',\n  eventSaved: 'Event saved',\n  eventDeleted: 'Event deleted',\n  unexpectedError: 'Unexpected error',\n}\n\nexport const defaultConfig: WeekPlannerConfig = {\n  isLoading: false,\n  isSkeleton: false,\n  minuteIndicator: false,\n  timeslotHeight: 60,\n  calendarGripGap: 2,\n  padding: 4,\n  spacing: 4,\n  background: 'gray.100',\n  timeFormats: ['h:mm', 'h:m', 'h', 'hh', 'hh:m', 'hh:mm'],\n  minWidth: 'container.lg',\n  onSaveEvent: (event: WeekEventInput) => {\n    console.error(\n      `Implement the onSaveEvent function in WeekPlannerConfig.ts to save ${event.title}`\n    )\n    return new Promise((resolve) =>\n      resolve({\n        event: {\n          ...event,\n          id: event.id ? event.id : Math.random() * 1000 * 1000,\n        },\n      })\n    )\n  },\n  onDeleteEvent: (eventId: WeekEvent['id']) => {\n    console.error(\n      `Implement the onDeleteEvent function in WeekPlannerConfig.ts to delete events`\n    )\n    return new Promise((resolve) => resolve({ event: { id: eventId } }))\n  },\n  eventTypes: [\n    {\n      value: 'todo',\n      label: 'Todo',\n      colorScheme: 'orange',\n      isDefault: true,\n    },\n    {\n      value: 'work',\n      label: 'Work',\n      colorScheme: 'purple',\n    },\n    {\n      value: 'other',\n      label: 'Other',\n      colorScheme: 'gray',\n    },\n  ],\n  toastDurationMilli: 3000,\n}\n"]},"metadata":{},"sourceType":"script"}