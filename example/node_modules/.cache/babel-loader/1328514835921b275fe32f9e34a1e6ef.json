{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _react2 = require(\"@chakra-ui/react\");\n\nvar _TimeTableCells = _interopRequireDefault(require(\"./TimeTableCells\"));\n\nvar _TimeColumn = _interopRequireDefault(require(\"./TimeColumn\"));\n\nvar _WeekPlannerConfig = require(\"../utils/WeekPlannerConfig\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar TimeTable = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {\n  var date = _ref.date,\n      gap = _ref.gap,\n      events = _ref.events,\n      setEvents = _ref.setEvents,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? _WeekPlannerConfig.defaultConfig : _ref$config,\n      scrollWeekDays = _ref.scrollWeekDays;\n  var spacing = config.spacing,\n      minWidth = config.minWidth;\n  return /*#__PURE__*/_react.default.createElement(_react2.Flex, {\n    flexDirection: \"column\"\n  }, /*#__PURE__*/_react.default.createElement(_react2.Flex, null, /*#__PURE__*/_react.default.createElement(_TimeColumn.default, {\n    date: date,\n    gap: gap,\n    config: config\n  }), /*#__PURE__*/_react.default.createElement(_react2.Box, {\n    width: spacing / 2\n  }), /*#__PURE__*/_react.default.createElement(_react2.Flex, {\n    ref: ref,\n    flexDirection: \"column\",\n    overflowX: \"scroll\",\n    flex: 1,\n    onScroll: function onScroll(event) {\n      return scrollWeekDays(event.currentTarget.scrollLeft);\n    }\n  }, /*#__PURE__*/_react.default.createElement(_react2.Box, {\n    minWidth: minWidth\n  }, /*#__PURE__*/_react.default.createElement(_TimeTableCells.default, {\n    date: date,\n    events: events,\n    gap: gap,\n    setEvents: setEvents,\n    config: config\n  })))));\n});\nvar _default = TimeTable;\nexports.default = _default;","map":{"version":3,"sources":["../../../../../src/lib/components/weekPlanner/timeTable/TimeTable.tsx"],"names":["TimeTable","date","gap","events","setEvents","config","defaultConfig","scrollWeekDays","spacing","minWidth","event"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAMA,SAAS,GAAA,aAAG,CAAA,GAAA,MAAA,CAAA,UAAA,EAChB,UAAA,IAAA,EAAA,GAAA,EAUK;AAAA,MARDC,IAQC,GAAA,IAAA,CARDA,IAQC;AAAA,MAPDC,GAOC,GAAA,IAAA,CAPDA,GAOC;AAAA,MANDC,MAMC,GAAA,IAAA,CANDA,MAMC;AAAA,MALDC,SAKC,GAAA,IAAA,CALDA,SAKC;AAAA,MAAA,WAAA,GAAA,IAAA,CAJDC,MAIC;AAAA,MAJDA,MAIC,GAAA,WAAA,KAAA,KAAA,CAAA,GAJQC,kBAAAA,CAAAA,aAIR,GAAA,WAAA;AAAA,MAHDC,cAGC,GAAA,IAAA,CAHDA,cAGC;AACH,MAAQC,OAAR,GAA8BH,MAA9B,CAAA,OAAA;AAAA,MAAiBI,QAAjB,GAA8BJ,MAA9B,CAAA,QAAA;AACA,SAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,IAAA,EAAA;AAAM,IAAA,aAAa,EAAC;AAApB,GAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,IAAA,EAAA,IAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAD,OAAA,EAAA;AAAY,IAAA,IAAI,EAAhB,IAAA;AAAwB,IAAA,GAAG,EAA3B,GAAA;AAAkC,IAAA,MAAM,EAAEA;AAA1C,GAAA,CADF,EAAA,aAEE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,GAAA,EAAA;AAAK,IAAA,KAAK,EAAEG,OAAO,GAAG;AAAtB,GAAA,CAFF,EAAA,aAGE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,IAAA,EAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,aAAa,EAFf,QAAA;AAGE,IAAA,SAAS,EAHX,QAAA;AAIE,IAAA,IAAI,EAJN,CAAA;AAKE,IAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,KAAA,EAAA;AAAA,aAAWD,cAAc,CAACG,KAAK,CAALA,aAAAA,CAA1B,UAAyB,CAAzB;AAAA;AALZ,GAAA,EAAA,aAOE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAD,GAAA,EAAA;AAAK,IAAA,QAAQ,EAAED;AAAf,GAAA,EAAA,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAA,CAAD,OAAA,EAAA;AACE,IAAA,IAAI,EADN,IAAA;AAEE,IAAA,MAAM,EAFR,MAAA;AAGE,IAAA,GAAG,EAHL,GAAA;AAIE,IAAA,SAAS,EAJX,SAAA;AAKE,IAAA,MAAM,EAAEJ;AALV,GAAA,CADF,CAPF,CAHF,CADF,CADF;AAbJ,CAAkB,CAAlB;eAyCeL,S","sourcesContent":["import React, { ForwardedRef, forwardRef } from 'react'\nimport { Box, Flex, SystemProps } from '@chakra-ui/react'\nimport TimeTableCells from './TimeTableCells'\nimport WeekEvent from '../WeekEvent'\nimport TimeColumn from './TimeColumn'\nimport { WeekPlannerConfig, defaultConfig } from '../utils/WeekPlannerConfig'\ninterface TimeTableProps {\n  date: Date\n  gap: SystemProps['gridGap']\n  events: WeekEvent[]\n  setEvents?: (events: WeekEvent[]) => void\n  config?: WeekPlannerConfig\n  scrollWeekDays: (left: number) => void\n}\n\nconst TimeTable = forwardRef(\n  (\n    {\n      date,\n      gap,\n      events,\n      setEvents,\n      config = defaultConfig,\n      scrollWeekDays,\n    }: TimeTableProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    const { spacing, minWidth } = config\n    return (\n      <Flex flexDirection=\"column\">\n        <Flex>\n          <TimeColumn date={date} gap={gap} config={config} />\n          <Box width={spacing / 2} />\n          <Flex\n            ref={ref}\n            flexDirection=\"column\"\n            overflowX=\"scroll\"\n            flex={1}\n            onScroll={(event) => scrollWeekDays(event.currentTarget.scrollLeft)}\n          >\n            <Box minWidth={minWidth}>\n              <TimeTableCells\n                date={date}\n                events={events}\n                gap={gap}\n                setEvents={setEvents}\n                config={config}\n              />\n            </Box>\n          </Flex>\n        </Flex>\n      </Flex>\n    )\n  }\n)\n\nexport default TimeTable\n"]},"metadata":{},"sourceType":"script"}