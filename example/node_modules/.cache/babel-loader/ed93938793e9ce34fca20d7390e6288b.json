{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _react2 = require(\"@chakra-ui/react\");\n\nvar _weekDays = _interopRequireDefault(require(\"./utils/weekDays\"));\n\nvar _dateFns = require(\"date-fns\");\n\nvar _WeekPlannerConfig = require(\"./utils/WeekPlannerConfig\");\n\nvar _swr = _interopRequireDefault(require(\"swr\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar WeekDaysHeader = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {\n  var gap = _ref.gap,\n      date = _ref.date,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? _WeekPlannerConfig.defaultConfig : _ref$config,\n      scrollTimeTable = _ref.scrollTimeTable;\n\n  var _useSWR = (0, _swr[\"default\"])('weekDays', function () {\n    return (0, _weekDays[\"default\"])(date);\n  }),\n      days = _useSWR.data;\n\n  var _useState = (0, _react.useState)(days || []),\n      _useState2 = _slicedToArray(_useState, 2),\n      _days = _useState2[0],\n      setDays = _useState2[1];\n\n  var spacing = config.spacing,\n      minWidth = config.minWidth;\n  var longestHourLabel = '12 AM';\n  (0, _react.useEffect)(function () {\n    setDays((0, _weekDays[\"default\"])(date));\n  }, [date]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_react2.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.SimpleGrid, {\n    columns: 1,\n    gap: gap\n  }, /*#__PURE__*/_react[\"default\"].createElement(_react2.Box, {\n    key: 'dummy-column',\n    visibility: \"hidden\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_react2.Center, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.Text, {\n    fontWeight: \"semibold\"\n  }, longestHourLabel)))), /*#__PURE__*/_react[\"default\"].createElement(_react2.Box, {\n    width: spacing / 2\n  }), /*#__PURE__*/_react[\"default\"].createElement(_react2.Flex, {\n    ref: ref,\n    flexDirection: \"column\",\n    overflowX: \"scroll\",\n    flex: 1,\n    style: {\n      msOverflowStyle: 'none',\n      scrollbarWidth: 'none'\n    },\n    css: {\n      '&::-webkit-scrollbar': {\n        display: 'none'\n      }\n    },\n    onScroll: function onScroll(event) {\n      return scrollTimeTable(event.currentTarget.scrollLeft);\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_react2.Box, {\n    minWidth: minWidth\n  }, /*#__PURE__*/_react[\"default\"].createElement(_react2.SimpleGrid, {\n    columns: 7,\n    gap: gap,\n    flex: 1\n  }, _days.map(function (weekDay) {\n    return /*#__PURE__*/_react[\"default\"].createElement(_react2.Text, {\n      key: weekDay.label,\n      color: (0, _dateFns.isToday)(weekDay.raw) ? 'brand.500' : undefined,\n      fontSize: \"lg\",\n      fontWeight: \"semibold\",\n      textAlign: \"center\"\n    }, \"\".concat(weekDay.label.toUpperCase(), \" \").concat(weekDay.dayOfMonth));\n  })))));\n});\nvar _default = WeekDaysHeader;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/lib/components/weekPlanner/WeekDaysHeader.tsx"],"names":["WeekDaysHeader","gap","date","config","defaultConfig","scrollTimeTable","days","_days","setDays","spacing","minWidth","longestHourLabel","msOverflowStyle","scrollbarWidth","display","event","weekDay"],"mappings":"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","sourcesContent":["import React, { ForwardedRef, forwardRef, useEffect, useState } from 'react'\nimport {\n  Box,\n  Center,\n  Text,\n  Flex,\n  SystemProps,\n  SimpleGrid,\n} from '@chakra-ui/react'\nimport weekDays from './utils/weekDays'\nimport { isToday } from 'date-fns'\nimport { WeekPlannerConfig, defaultConfig } from './utils/WeekPlannerConfig'\nimport useSWR from 'swr'\n\ninterface WeekDaysHeaderProps {\n  date: Date\n  gap: SystemProps['gridGap']\n  config?: WeekPlannerConfig\n  scrollTimeTable: (left: number) => void\n}\n\nconst WeekDaysHeader = forwardRef(\n  (\n    { gap, date, config = defaultConfig, scrollTimeTable }: WeekDaysHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    const { data: days } = useSWR('weekDays', () => {\n      return weekDays(date)\n    })\n    const [_days, setDays] = useState(days || [])\n    const { spacing, minWidth } = config\n    const longestHourLabel = '12 AM'\n\n    useEffect(() => {\n      setDays(weekDays(date))\n    }, [date])\n\n    return (\n      <Flex>\n        {/* Dummy column. TODO: set to width of time column programmatically */}\n        <SimpleGrid columns={1} gap={gap}>\n          <Box key={'dummy-column'} visibility=\"hidden\">\n            <Center>\n              <Text fontWeight=\"semibold\">{longestHourLabel}</Text>\n            </Center>\n          </Box>\n        </SimpleGrid>\n        <Box width={spacing / 2} />\n        {/* Week days grid */}\n        <Flex\n          ref={ref}\n          flexDirection=\"column\"\n          overflowX=\"scroll\"\n          flex={1}\n          style={{\n            msOverflowStyle: 'none',\n            scrollbarWidth: 'none',\n          }}\n          css={{\n            '&::-webkit-scrollbar': {\n              display: 'none',\n            },\n          }}\n          onScroll={(event) => scrollTimeTable(event.currentTarget.scrollLeft)}\n        >\n          <Box minWidth={minWidth}>\n            <SimpleGrid columns={7} gap={gap} flex={1}>\n              {_days.map((weekDay) => (\n                <Text\n                  key={weekDay.label}\n                  color={isToday(weekDay.raw) ? 'brand.500' : undefined}\n                  fontSize=\"lg\"\n                  fontWeight=\"semibold\"\n                  textAlign=\"center\"\n                >\n                  {`${weekDay.label.toUpperCase()} ${weekDay.dayOfMonth}`}\n                </Text>\n              ))}\n            </SimpleGrid>\n          </Box>\n        </Flex>\n      </Flex>\n    )\n  }\n)\n\nexport default WeekDaysHeader\n"]},"metadata":{},"sourceType":"script"}