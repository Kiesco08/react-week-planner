{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _react2 = require(\"@chakra-ui/react\");\n\nvar _fa = require(\"react-icons/fa\");\n\nvar _dateFns = require(\"date-fns\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DateNavigator = function DateNavigator(_ref) {\n  var date = _ref.date,\n      setDate = _ref.setDate,\n      setWeekStart = _ref.setWeekStart;\n\n  var updateDates = function updateDates(newDate) {\n    setDate(newDate);\n    if (setWeekStart) setWeekStart((0, _dateFns.startOfWeek)(newDate));\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_react2.Box, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.Flex, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.Center, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.Text, {\n    fontSize: \"x-large\",\n    fontWeight: \"semibold\"\n  }, \"\".concat((0, _dateFns.format)(date, 'MMMM'), \" \").concat((0, _dateFns.format)(date, 'yyyy')))), /*#__PURE__*/_react[\"default\"].createElement(_react2.Spacer, null), /*#__PURE__*/_react[\"default\"].createElement(_react2.HStack, null, /*#__PURE__*/_react[\"default\"].createElement(_react2.IconButton, {\n    \"aria-label\": \"last-week\",\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_fa.FaChevronLeft, null),\n    variant: \"outline\",\n    onClick: function onClick() {\n      return updateDates((0, _dateFns.add)(date, {\n        weeks: -1\n      }));\n    }\n  }), /*#__PURE__*/_react[\"default\"].createElement(_react2.Button, {\n    onClick: function onClick() {\n      return updateDates(new Date());\n    },\n    variant: \"outline\"\n  }, \"Today\"), /*#__PURE__*/_react[\"default\"].createElement(_react2.IconButton, {\n    \"aria-label\": \"next-week\",\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_fa.FaChevronRight, null),\n    variant: \"outline\",\n    onClick: function onClick() {\n      return updateDates((0, _dateFns.add)(date, {\n        weeks: 1\n      }));\n    }\n  }))));\n};\n\nvar _default = DateNavigator;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../src/lib/components/weekPlanner/DateNavigator.tsx"],"names":["DateNavigator","date","setDate","setWeekStart","updateDates","weeks"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Box,\n  Button,\n  Center,\n  HStack,\n  IconButton,\n  Text,\n  Flex,\n  Spacer,\n} from '@chakra-ui/react'\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\nimport { format, add, startOfWeek } from 'date-fns'\n\ninterface DateNavigatorProps {\n  date: Date\n  setDate: (date: Date) => void\n  setWeekStart?: (weekStart: Date) => void\n}\n\nconst DateNavigator = ({ date, setDate, setWeekStart }: DateNavigatorProps) => {\n  const updateDates = (newDate: Date) => {\n    setDate(newDate)\n    if (setWeekStart) setWeekStart(startOfWeek(newDate))\n  }\n  return (\n    <Box>\n      <Flex>\n        {/* Month Year */}\n        <Center>\n          <Text fontSize=\"x-large\" fontWeight=\"semibold\">{`${format(\n            date,\n            'MMMM'\n          )} ${format(date, 'yyyy')}`}</Text>\n        </Center>\n        <Spacer />\n        {/* Date switcher */}\n        <HStack>\n          <IconButton\n            aria-label=\"last-week\"\n            icon={<FaChevronLeft />}\n            variant=\"outline\"\n            onClick={() => updateDates(add(date, { weeks: -1 }))}\n          />\n          <Button onClick={() => updateDates(new Date())} variant=\"outline\">\n            Today\n          </Button>\n          <IconButton\n            aria-label=\"next-week\"\n            icon={<FaChevronRight />}\n            variant=\"outline\"\n            onClick={() => updateDates(add(date, { weeks: 1 }))}\n          />\n        </HStack>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default DateNavigator\n"]},"metadata":{},"sourceType":"script"}