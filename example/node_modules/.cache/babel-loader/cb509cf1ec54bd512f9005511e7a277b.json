{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dateFns = require(\"date-fns\");\n\nvar dayHours = function dayHours() {\n  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n  var hours = (0, _dateFns.eachHourOfInterval)({\n    start: (0, _dateFns.startOfDay)(date),\n    end: (0, _dateFns.endOfDay)(date)\n  });\n  return hours.map(function (hour) {\n    return {\n      label: (0, _dateFns.format)(hour, 'h a'),\n      raw: hour.getHours()\n    };\n  });\n};\n\nvar _default = dayHours;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../../../src/lib/components/weekPlanner/utils/dayHours.ts"],"names":["dayHours","date","hours","start","end","label","raw","hour"],"mappings":";;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAOA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAwC;AAAA,MAAvCC,IAAuC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA1B,IAAA,IAAA,EAA0B;AACvD,MAAMC,KAAK,GAAG,CAAA,GAAA,QAAA,CAAA,kBAAA,EAAmB;AAC/BC,IAAAA,KAAK,EAAE,CAAA,GAAA,QAAA,CAAA,UAAA,EADwB,IACxB,CADwB;AAE/BC,IAAAA,GAAG,EAAE,CAAA,GAAA,QAAA,CAAA,QAAA,EAAA,IAAA;AAF0B,GAAnB,CAAd;AAIA,SAAO,KAAK,CAAL,GAAA,CAAU,UAAA,IAAA,EAAmB;AAClC,WAAO;AACLC,MAAAA,KAAK,EAAE,CAAA,GAAA,QAAA,CAAA,MAAA,EAAA,IAAA,EADF,KACE,CADF;AAELC,MAAAA,GAAG,EAAEC,IAAI,CAAJA,QAAAA;AAFA,KAAP;AADF,GAAO,CAAP;AALF,CAAA;;eAaeP,Q","sourcesContent":["import { format, eachHourOfInterval, startOfDay, endOfDay } from 'date-fns'\n\nexport interface DayHour {\n  label: string\n  raw: number\n}\n\nconst dayHours = (date: Date = new Date()): DayHour[] => {\n  const hours = eachHourOfInterval({\n    start: startOfDay(date),\n    end: endOfDay(date),\n  })\n  return hours.map((hour): DayHour => {\n    return {\n      label: format(hour, 'h a'),\n      raw: hour.getHours(),\n    }\n  })\n}\n\nexport default dayHours\n"]},"metadata":{},"sourceType":"script"}