{"ast":null,"code":"var _jsxFileName = \"/Users/franckmamboue/Developer/react-week-planner/example/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport 'focus-visible/dist/focus-visible';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { WeekPlanner, defaultConfig } from '../../src/lib/components/weekPlanner';\nimport theme from './theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  let EventType;\n\n  (function (EventType) {\n    EventType[\"Training\"] = \"training\";\n    EventType[\"Busy\"] = \"busy\";\n    EventType[\"Game\"] = \"game\";\n    EventType[\"Other\"] = \"other\";\n  })(EventType || (EventType = {}));\n\n  const eventTypes = [{\n    value: EventType.Training,\n    label: EventType.Training.charAt(0).toUpperCase() + EventType.Training.slice(1),\n    colorScheme: 'orange',\n    isDefault: true\n  }, {\n    value: EventType.Busy,\n    label: EventType.Busy.charAt(0).toUpperCase() + EventType.Busy.slice(1),\n    colorScheme: 'gray'\n  }, {\n    value: EventType.Game,\n    label: EventType.Game.charAt(0).toUpperCase() + EventType.Game.slice(1),\n    colorScheme: 'green'\n  }, {\n    value: EventType.Other,\n    label: EventType.Other.charAt(0).toUpperCase() + EventType.Other.slice(1),\n    colorScheme: 'teal'\n  }];\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    resetCSS: true,\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(WeekPlanner, {\n      events: events,\n      setEvents: setEvents,\n      setWeekStart: () => {},\n      config: { ...defaultConfig,\n        eventTypes\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fh+hzEDekCPeegwQh0J56A4r3Ew=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/franckmamboue/Developer/react-week-planner/example/src/App.tsx"],"names":["ChakraProvider","React","useState","WeekPlanner","defaultConfig","theme","App","events","setEvents","EventType","eventTypes","value","Training","label","charAt","toUpperCase","slice","colorScheme","isDefault","Busy","Game","Other"],"mappings":";;;AAAA,OAAO,kCAAP;AACA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,WADF,EAGEC,aAHF,QAKO,sCALP;AAMA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAc,EAAd,CAApC;AAD0B,MAGrBO,SAHqB;;AAAA,aAGrBA,SAHqB;AAGrBA,IAAAA,SAHqB;AAGrBA,IAAAA,SAHqB;AAGrBA,IAAAA,SAHqB;AAGrBA,IAAAA,SAHqB;AAAA,KAGrBA,SAHqB,KAGrBA,SAHqB;;AAS1B,QAAMC,UAA6B,GAAG,CACpC;AACEC,IAAAA,KAAK,EAAEF,SAAS,CAACG,QADnB;AAEEC,IAAAA,KAAK,EACHJ,SAAS,CAACG,QAAV,CAAmBE,MAAnB,CAA0B,CAA1B,EAA6BC,WAA7B,KACAN,SAAS,CAACG,QAAV,CAAmBI,KAAnB,CAAyB,CAAzB,CAJJ;AAKEC,IAAAA,WAAW,EAAE,QALf;AAMEC,IAAAA,SAAS,EAAE;AANb,GADoC,EASpC;AACEP,IAAAA,KAAK,EAAEF,SAAS,CAACU,IADnB;AAEEN,IAAAA,KAAK,EAAEJ,SAAS,CAACU,IAAV,CAAeL,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,KAAyCN,SAAS,CAACU,IAAV,CAAeH,KAAf,CAAqB,CAArB,CAFlD;AAGEC,IAAAA,WAAW,EAAE;AAHf,GAToC,EAcpC;AACEN,IAAAA,KAAK,EAAEF,SAAS,CAACW,IADnB;AAEEP,IAAAA,KAAK,EAAEJ,SAAS,CAACW,IAAV,CAAeN,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,KAAyCN,SAAS,CAACW,IAAV,CAAeJ,KAAf,CAAqB,CAArB,CAFlD;AAGEC,IAAAA,WAAW,EAAE;AAHf,GAdoC,EAmBpC;AACEN,IAAAA,KAAK,EAAEF,SAAS,CAACY,KADnB;AAEER,IAAAA,KAAK,EAAEJ,SAAS,CAACY,KAAV,CAAgBP,MAAhB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CN,SAAS,CAACY,KAAV,CAAgBL,KAAhB,CAAsB,CAAtB,CAFnD;AAGEC,IAAAA,WAAW,EAAE;AAHf,GAnBoC,CAAtC;AA0BA,sBACE,QAAC,cAAD;AAAgB,IAAA,QAAQ,MAAxB;AAAyB,IAAA,KAAK,EAAEZ,KAAhC;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,MAAM,EAAEE,MADV;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,YAAY,EAAE,MAAM,CAAE,CAHxB;AAIE,MAAA,MAAM,EAAE,EAAE,GAAGJ,aAAL;AAAoBM,QAAAA;AAApB;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7CD;;GAAMJ,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import 'focus-visible/dist/focus-visible'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport {\n  WeekPlanner,\n  EventTypeConfig,\n  defaultConfig,\n  WeekEvent,\n} from '../../src/lib/components/weekPlanner'\nimport theme from './theme'\n\nconst App: React.FC = () => {\n  const [events, setEvents] = useState<WeekEvent[]>([])\n\n  enum EventType {\n    Training = 'training',\n    Busy = 'busy',\n    Game = 'game',\n    Other = 'other',\n  }\n  const eventTypes: EventTypeConfig[] = [\n    {\n      value: EventType.Training,\n      label:\n        EventType.Training.charAt(0).toUpperCase() +\n        EventType.Training.slice(1),\n      colorScheme: 'orange',\n      isDefault: true,\n    },\n    {\n      value: EventType.Busy,\n      label: EventType.Busy.charAt(0).toUpperCase() + EventType.Busy.slice(1),\n      colorScheme: 'gray',\n    },\n    {\n      value: EventType.Game,\n      label: EventType.Game.charAt(0).toUpperCase() + EventType.Game.slice(1),\n      colorScheme: 'green',\n    },\n    {\n      value: EventType.Other,\n      label: EventType.Other.charAt(0).toUpperCase() + EventType.Other.slice(1),\n      colorScheme: 'teal',\n    },\n  ]\n\n  return (\n    <ChakraProvider resetCSS theme={theme}>\n      <WeekPlanner\n        events={events}\n        setEvents={setEvents}\n        setWeekStart={() => {}}\n        config={{ ...defaultConfig, eventTypes }}\n      />\n    </ChakraProvider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}